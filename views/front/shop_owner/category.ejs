<div class="container" ng-controller="shopCategory">
    <% include ../public/modal %>
    <div class="col-xs-2">
        <% include sidebar %>
    </div>
    <div class="col-xs-10">
        <legend><%=title%>
            <small class="pull-right text-danger hide"><i class="fa fa-info"></i> <span id="errorInfo"></span></small>
            <small class="pull-right text-success hide"><i class="fa fa-info"></i> <span id="successInfo"></span></small>
        </legend>
        <div class="panel">
            <a href="#addCategory" role="button" class="btn btn-primary btn-sm" data-toggle="modal"><span class="fa fa-plus-square" aria-hidden="true">&nbsp;</span>New Category</a>
			<input type="hidden" id="targetIds"/>
			<button class="btn btn-danger btn-sm" ng-click="deleteItems()" role="button"><span class="fa fa-fw fa-trash-o" aria-hidden="true">&nbsp;</span>Delete</button>
		</div>
        <!-- Category Table -->
		<div class="box">
			<div class="box-body table-responsive no-padding" >
				<table class="table table-hover">
					<tr>
						<th><input type="checkbox" class="mini" id="selectAll"/></th>
						<th>SortId</th>
						<th>Name</th>
						<th>Url</th>
						<th>State</th>
						<th>Description</th>
						<th>Date</th>
						<th>Operation</th>
					</tr>
					<tr class="datalist" ng-repeat="item in data">
						<td><input type="checkbox" name="listItem" class="mini" value="{{item._id}}" ng-click="getNewIds()"/></td>
						<td class=" ">{{item.sortId}}</td>
						<td class=" " ng-show="item.parentId === 'top'">{{item.name}}</td>
						<td class=" " ng-show="item.parentId !== 'top'">&nbsp;&nbsp;&nbsp;&nbsp;<i class="fa fa-location-arrow"></i>&nbsp;{{item.name}}</td>
						<td class=" ">{{item.url}}</td>
						<td class=" ">{{item.state}}</td>
						<td class=" ">{{item.description}}</td>
						<td class=" ">{{item.date | date : "yy-MM-dd"}}</td>
						<td class=" ">
							<button class="btn btn-primary btn-xs" data-whatever="{{item._id}}" data-toggle="modal" data-target="#addCategory"><span class="fa fa-fw fa-edit" aria-hidden="true"></span>Edit</button>&nbsp;
							<button class="btn btn-danger btn-xs" ng-click="deleteItems(item._id)"><span class="fa fa-fw fa-trash-o" aria-hidden="true"></span>Delete</button>
						</td>
					</tr>
				</table>
			</div><!-- /.box-body -->
		</div><!-- /.box -->
    </div>
    <!--添加目录模态窗口-->
    <div class="modal fade" id="addCategory">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">New Category</h4>
                </div>
                <div class="modal-body">
                    <form role="form" class="form-horizontal" name="myForm" ng-submit="processForm(myForm.$valid)" novalidate>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Name</label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control" name="name" ng-model="formData.name" ng-minlength="1" ng-maxlength="30" required/>
                                <label for="inputError" class="control-label text-danger" ng-show="myForm.name.$invalid && !myForm.name.$pristine"><i class="fa fa-times-circle-o"></i> 1-30 letters</label>
                            </div>
                        </div>
						<div class="form-group">
							<label class="control-label col-sm-4">SortId</label>
							<div class="col-sm-4">
								<input type="text" class="form-control" name="sortId" ng-model="formData.sortId" ng-minlength="1" ng-maxlength="3" required/>
								<label for="inputError" class="control-label text-danger" ng-show="myForm.sortId.$invalid && !myForm.sortId.$pristine"><i class="fa fa-times-circle-o"></i> 1-100 number</label>
							</div>
						</div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">isHide</label>
                            <div class="radio col-sm-4">
                                <label>
                                    <input type="radio" class="mini" name="state" value="1" ng-model="formData.state" checked/>Show&nbsp;
                                </label>
                                <label>
                                    <input type="radio" class="mini" name="state" value="0" ng-model="formData.state"/>Hide
                                </label>
                            </div>
                        </div>
                        <div class="form-group" id="div-set-url">
                            <label class="control-label col-sm-4">URL</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" name="url" ng-model="formData.url" placeholder="relative url-path" ng-minlength="2" ng-maxlength="30" ng-pattern="/^\S+[a-z_A-Z]$/" required/>
                                <label for="inputError" class="control-label text-danger" ng-show="myForm.url.$invalid && !myForm.url.$pristine"><i class="fa fa-times-circle-o"></i> 2-30 letters</label>

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Keywords</label>
                            <div class="col-sm-6">
                                <textarea name="keywords" cols="30" class="form-control" rows="2"  ng-model="formData.keywords" ng-maxlength="80"></textarea>
                                <label class="control-label text-info" ng-show="true">less than 80 letters, split with comma</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Description</label>
                            <div class="col-sm-7">
                                <textarea name="description" cols="30" class="form-control" rows="2"  ng-model="formData.description" ng-maxlength="100"></textarea>
                                <label for="inputError" class="control-label text-danger" ng-show="myForm.description.$invalid && !myForm.description.$pristine"><i class="fa fa-times-circle-o"></i> less than 100 letters</label>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary" ng-disabled="myForm.$invalid">Submit</button>
							<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</div>

<script>
    $( function () {

    });

    App.controller('shopCategory', function ($scope, $http) {
        var url = '/api/v1/category',
            getUrl = url + '?shop=1';
        $scope.formData = { };
        $scope.formData.state = true;

        function callback(result) {
            if (typeof result === 'object') {
                $scope.data = $scope.data2tree(result);
            }
        }

        initPage($scope, $http, getUrl, false, callback);
        $scope.load = function () {
            loadData($scope, $http, getUrl, callback);
		};

        $scope.load();

        initDelete($scope, $http, '/api/v1/category', 'Are you sure to delete the category?');


        // 修改类别
        $( '#addCategory' ).on( 'show.bs.modal', function ( event ) {
            var obj = $( event.relatedTarget );
            var editId = obj.data( 'whatever' );
            var modalTitle = $( this ).find( '.modal-title' );

 			// 如果不为空则为编辑状态
            if ( editId ) {
                modalTitle.text( "Edit Category" );
                $http.get( "/api/v1/category/" + editId ).success( function ( result ) {
                    $scope.formData = result;
                    $scope.targetID = editId;
                });
            } else {
                modalTitle.text("New Category");
				$scope.formData = { };
				$scope.formData.state = true;
            }
        }).on( 'hidden.bs.modal', function ( e ) {
            // 清空数据
            $scope.formData = { };
			$scope.formData.state = true;
            $scope.targetID = "";
            $( this ).find( "input" ).val( "" );
        });

        // 添加类别
        $scope.processForm = function ( isValid ) {
			var method = "PUT",
                optUrl = url;
            if ( $scope.targetID ) {
                optUrl = url + '/' + $scope.targetID;
				method = "POST";
            }

            angularHttp( $http, method, optUrl, $scope.formData, function ( data ) {
				if ( data === 'success' ) {
					$scope.load();
				}
            });
        };

        $scope.data2tree = function ( data ) {
			var d = { }, // 生成树的中间结果，利用了对象属性的哈希特性
				da = [ ], // 返回的结果数组，内容为Category对象
				keys = [ ]; // 为了保证SortId的有序，先保存所有已排序Top目录的_id，后面用此_id遍历对象属性
			for ( var i = 0; i < data.length; i++ ) {
				if ( data[i].parentId === 'top' ) {
					if ( typeof d[data[i]._id] === 'undefined' ) {
						d[data[i]._id] = { };
						if ( keys.join(',').indexOf( data[i]._id ) < 0 ) {
							keys.push( data[i]._id );
						}
					}
					d[data[i]._id].me = data[i];
				} else {
					if ( typeof d[data[i].parentId] === 'undefined' ) {
						d[data[i].parentId] = { };
						if ( keys.join(',').indexOf( data[i].parentId ) < 0 ) {
							keys.push( data[i].parentId );
						}
					}
					if ( typeof d[data[i].parentId].children === 'undefined' ) {
						d[data[i].parentId].children = [];
					}
					d[data[i].parentId].children.push(data[i]);
				}
			}
			// console.log(d);
			for ( var j = 0; j < keys.length; j++ ) {
				if ( typeof d[keys[j]].me !== 'undefined' ) {
					da.push(d[keys[j]].me); // key[j]为parentId为'top'的Category的_id值
				}
				if ( typeof d[keys[j]].children !== 'undefined' ) {
					for ( var i = 0; i < d[keys[j]].children.length; i++ ) {
						da.push(d[keys[j]].children[i]); // 依次将子目录加在父目录后面
					}
				}
			}
			// console.log(da);
			return da;
		};
    });
</script>
